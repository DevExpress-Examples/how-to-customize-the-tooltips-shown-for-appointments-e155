// Developer Express Code Central Example:
// How to customize the tooltips shown for appointments
// 
// Problem: How can I control the tooltip appearance and a tooltip message which is
// shown for each appointment? For instance, I want to change the font color and
// backcolor of every tooltip, and make them show not only the appointment's
// description, but also its subject and location. How can this be done? Solution:
// A SchedulerControl provides the TooltipController property. Use it to specify
// the tooltip controller, which controls the appearance of the appointment
// tooltips. You should create a new TooltipController, assign it to the
// SchedulerControl.TooltipController property, and then set the values of the
// required properties. Also, you can handle the TooltipController.BeforeShow event
// to specify a custom text for the tooltips. The following example illustrates
// this approach.
// 
// You can find sample updates and versions for different programming languages here:
// http://www.devexpress.com/example=E155

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CustomAppointmentEditForm.Properties {


    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "8.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {

        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));

        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
